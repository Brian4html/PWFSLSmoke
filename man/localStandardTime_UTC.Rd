% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/localStandardTime_UTC.R
\name{localStandardTime_UTC}
\alias{localStandardTime_UTC}
\title{Create UTC version of Local Standard Time}
\usage{
localStandardTime_UTC(datetime, timezone = NULL)
}
\arguments{
\item{datetime}{vector of character or integer datetimes in Ymd[HMS] format
(or POSIXct).}

\item{timezone}{Olson timezone at the location of interest.}
}
\value{
Vector of POSIXct datetimes.
}
\description{
Creates a "Local Standard Time" version of a timeseries with monotonically
increasing hours that avoids labeling issues during the change between
standard time and daylight savings.

While the \pkg{lubridate} package makes it easy to display time labels in
"Local Time", this causes labeling problems for timeseries that cross the
boundary between daylight savings time and standard time.

This function provides a solution for this labeling problem by returning
a UTC version of the timeseries that has been shifted by `UTC_offset` hours
as found in the \code{@data} slot of the
\code{MazamaSpatialUtils::SimpleTimezones} spatial dataset.
}
\note{
The returned timeseries represents different physical times than the
incoming \code{datetime} vector. \strong{It should only be used for labeling.}
}
\examples{
\dontrun{
Thompson_Falls <- monitor_load(20181031, 20181111,
                               monitorIDs = "300890007_01")
datetime <- Thompson_Falls$data$datetime
timezone <- Thompson_Falls$meta$timezone
LST_UTC <- localStandardTime_UTC(datetime, timezone)
lubridate::with_tz(datetime, "America/Denver")[103:106]
lubridate::with_tz(LST_UTC, "UTC")[103:106]
strftime(datetime[103:106], "\%Y-\%m-\%d \%H:\%M", tz = timezone, usetz = TRUE)
strftime(LST_UTC[103:106], "\%Y-\%m-\%d \%H:\%M MST", tz = "UTC")
}
}
